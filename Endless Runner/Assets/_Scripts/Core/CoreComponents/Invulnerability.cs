using System.Collections;
using UnityEngine;

namespace TheCreators.CoreSystem.CoreComponents
{
    public class Invulnerability : BaseCoreComponent
    {
        [SerializeField] private int _playerLayer;
        [SerializeField] private int _obstaclesLayer;
        public void StartInvulnerability(float time)
        {
            Core.Movement.Rigidbody.isKinematic = false;
            Core.InputController.EnableInput();
            Core.SpriteRenderer.gameObject.SetActive(true);
            Core.Movement.gameObject.SetActive(true);
            Core.StateMachine.gameObject.SetActive(true);
            Core.StateMachine.StateMachine.SwitchState(Core.StateMachine.runState);
            StartCoroutine(Action(time));
        }
        private IEnumerator Action(float time)
        {
            Core.Movement.SetXVelocity(6);
            Physics2D.IgnoreLayerCollision(_playerLayer, _obstaclesLayer, true);
            yield return new WaitForSeconds(time);
            Physics2D.IgnoreLayerCollision(_playerLayer, _obstaclesLayer, false);
        }
    }
}